name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  compile:
    name: Get deps and compile
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - otp: 26.2.2
            elixir: 1.16.1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Elixir/OTP
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.versions.elixir }}
          otp-version: ${{ matrix.versions.otp }}

      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: deps
          key: deps-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: deps-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: _build
          key: build-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: build-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      - name: Install dependencies
        run: |
          mix deps.get
          mix deps.compile

      - name: Compile
        run: mix compile --warnings-as-errors

  linter:
    needs: compile
    name: Linter and Security
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - otp: 26.2.2
            elixir: 1.16.1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Elixir/OTP
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.versions.elixir }}
          otp-version: ${{ matrix.versions.otp }}

      - name: Cache deps
        uses: actions/cache/restore@v4
        with:
          path: deps
          key: deps-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: deps-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      - name: Cache build
        uses: actions/cache/restore@v4
        with:
          path: _build
          key: build-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: build-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      - name: Credo
        run: mix credo --strict

      - name: Format
        run: mix format --check-formatted

      - name: Sobelow
        run: mix sobelow --config

  deps_audit:
    needs: compile
    name: Deps audit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - otp: 26.2.2
            elixir: 1.16.1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Elixir/OTP
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.versions.elixir }}
          otp-version: ${{ matrix.versions.otp }}

      - name: Cache deps
        uses: actions/cache/restore@v4
        with:
          path: deps
          key: deps-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: deps-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      - name: Cache build
        uses: actions/cache/restore@v4
        with:
          path: _build
          key: build-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: build-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      - name: Hex audit
        run: mix hex.audit

      - name: Deps audit
        run: mix deps.audit

      - name: Unused deps
        run: mix deps.unlock --check-unused

  dialyzer:
    needs: compile
    name: Dialyzer
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - otp: 26.2.2
            elixir: 1.16.1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Elixir/OTP
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.versions.elixir }}
          otp-version: ${{ matrix.versions.otp }}

      - name: Restore cache deps
        uses: actions/cache/restore@v4
        with:
          path: deps
          key: deps-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: deps-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      - name: Restore cache build
        uses: actions/cache/restore@v4
        with:
          path: _build
          key: build-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: build-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      - name: Restore PLT cache
        id: plt_cache
        uses: actions/cache/restore@v4
        with:
          path: priv/plts
          key: plt-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: plt-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      # Create PLTs if no cache was found
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      # By default, the GitHub Cache action will only save the cache if all steps in the job succeed,
      # so we separate the cache restore and save steps in case running dialyzer fails.
      - name: Save PLT cache
        id: plt_cache_save
        uses: actions/cache/save@v4
        if: steps.plt_cache.outputs.cache-hit != 'true'
        with:
          path: priv/plts
          key: plt-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: plt-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      - name: Dialyzer
        run: mix dialyzer --format github

  test:
    needs: compile
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - otp: 26.2.2
            elixir: 1.16.1

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: crebito_test
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Elixir/OTP
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.versions.elixir }}
          otp-version: ${{ matrix.versions.otp }}

      - name: Cache deps
        uses: actions/cache/restore@v4
        with:
          path: deps
          key: deps-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: deps-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      - name: Cache build
        uses: actions/cache/restore@v4
        with:
          path: _build
          key: build-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: build-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      - name: Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mix coveralls.github --warnings-as-errors --raise

  docker:
    name: Publish docker image
    runs-on: ubuntu-latest
    needs: [linter, deps_audit, dialyzer, test]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: anderkonzen/crebito:latest
          cache-from: type=registry,ref=anderkonzen/crebito:buildcache
          cache-to: type=registry,ref=anderkonzen/crebito:buildcache,mode=max
